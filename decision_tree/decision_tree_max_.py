# -*- coding: utf-8 -*-
"""decision_tree_max%.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xMt-zuUKa0FlxshEDCFDdnhpqZOFofAC
"""

import pandas as pd

dados = pd.read_csv("/Testes_ML_classi.csv")
dados.head()



x = dados[["Sexo","Solitude","Fumou","Pais_Fumante","amigod_drogados","idade"]]
y = dados[["Ja_bebeu"]]

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

SEED = 5
np.random.seed(SEED)
raw_treino_x, raw_teste_x, treino_y, teste_y = train_test_split(x, y, test_size = 0.25, stratify = y)

print("Treinaremos com %d elementos e testaremos com %d elementos" % (len(raw_treino_x), len(raw_teste_x)))

# max_depth dita a profundidade da arvore
modelo = DecisionTreeClassifier(max_depth=2)
modelo.fit(raw_treino_x, treino_y)
previsoes = modelo.predict(raw_teste_x)

acuracia = accuracy_score(teste_y, previsoes) * 100
print("A acurácia foi %.2f%%" % acuracia)

vetor_test = []
acu =[] #acuracias 
i = 0.10 #test size 

while i<1:  

  SEED = 5
  np.random.seed(SEED)
  raw_treino_x, raw_teste_x, treino_y, teste_y = train_test_split(x, y, test_size = i, stratify = y)

  print("Treinaremos com %d elementos e testaremos com %d elementos" % (len(raw_treino_x), len(raw_teste_x)))

  # max_depth dita a profundidade da arvore
  modelo = DecisionTreeClassifier(max_depth=2)
  modelo.fit(raw_treino_x, treino_y)
  previsoes = modelo.predict(raw_teste_x)

  acuracia = accuracy_score(teste_y, previsoes) * 100
  
  acu.append(acuracia)
  vetor_test.append(i)
  i = i + 0.01
  print(i)

acu
n_max = (max(acu)) # Melhor valor para acuracia entre um intervalo de test_size de 0.10 até 0.99
n_pos = acu.index(n_max) # Posição do melhor valor

print(max(acu)) # valor da maior acuracia
print(n_pos) # Posição da maior acuracia

vetor_test[0] # valor do test que maximiza a acuracia do SVM, TEST_SIZE = 0.10